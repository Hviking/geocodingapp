/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.beyondb.ui;

import com.beyondb.datasource.DataSource;
import com.beyondb.task.geom.GeomTask;
import com.beyondb.utils.FileUtils;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *创建新的矢量任务
 * @author 倪永
 */
public class JPanel_NewGeomIntoDB extends NewTaskIntoDB {

    /**
     * Creates new form JPanel_txtIntoDB
     */
    public JPanel_NewGeomIntoDB() {
        initComponents();
        
         String[] types = {"SHP", "mif",
                "AZB", "BZB", "CZB", "DZB", "EZB", "FZB", "GZB", "HZB", "IZB", "JZB", "KZB", "LZB",
                "MZB", "NZB", "OZB", "PZB", "QZB", "RZB", "SZB", "TZB", "UZB", "VZB", "WZB", "XZB",
                "ZZB", "GML"};
        SupportFileType=types;
        m_TablePanel=jTablePanel;//必须要有
        
        m_ShowDataBaseTablesPanel = new JPanel_DataBaseTables(this);
        jPanel_DBtbls.add(m_ShowDataBaseTablesPanel);
        jPanel_DBtbls.setLayout(new GridLayout(1, 1));
  
        this.m_Table = null;
        initTableModel();

    }
    
    /**
     * 初始化矢量数据表模型
     */
    @Override
       protected void initTableModel() {
          m_TableModel = new DefaultTableModel(
                  new Object[][]{},
                  new String[]{
                      "全选", "位置", "大小", "图幅名称"
                  }
          ) {
              Class[] types = new Class[]{
                  java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
              };
              boolean[] canEdit = new boolean[]{
                  true, false, false, false
              };

              @Override
              public Class getColumnClass(int columnIndex) {
                  return types[columnIndex];
              }

              @Override
              public boolean isCellEditable(int rowIndex, int columnIndex) {
                  return canEdit[columnIndex];
              }
          };
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel_NewIntoDB = new javax.swing.JPanel();
        jTextField_OpenFile = new javax.swing.JTextField();
        openfilebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel_DBtbls = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTablePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_ImportType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox_CreateSpatialIndex = new javax.swing.JCheckBox();
        jCheckBox_IgnoreError = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_TableStructure = new javax.swing.JComboBox();
        jComboBox_PageSize = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jTextField_location = new javax.swing.JTextField();
        jTextField_GeoColumnName = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setToolTipText("");
        setMaximumSize(new java.awt.Dimension(820, 369));
        setMinimumSize(new java.awt.Dimension(820, 369));
        setName("文本数据入库                           "); // NOI18N
        setPreferredSize(new java.awt.Dimension(820, 369));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel_NewIntoDB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_NewIntoDB.setPreferredSize(new java.awt.Dimension(820, 369));

        jTextField_OpenFile.setMinimumSize(new java.awt.Dimension(6, 30));
        jTextField_OpenFile.setPreferredSize(new java.awt.Dimension(6, 30));
        jTextField_OpenFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_OpenFileKeyPressed(evt);
            }
        });

        openfilebtn.setText("……");
        openfilebtn.setFocusable(false);
        openfilebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openfilebtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openfilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfilebtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("黑体", 1, 12)); // NOI18N
        jLabel2.setText("导入文件：");

        jPanel_DBtbls.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel_DBtblsLayout = new javax.swing.GroupLayout(jPanel_DBtbls);
        jPanel_DBtbls.setLayout(jPanel_DBtblsLayout);
        jPanel_DBtblsLayout.setHorizontalGroup(
            jPanel_DBtblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
        );
        jPanel_DBtblsLayout.setVerticalGroup(
            jPanel_DBtblsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("文件列表"));
        jPanel2.setToolTipText("");
        jPanel2.setName(""); // NOI18N

        jTablePanel.setBackground(new java.awt.Color(255, 255, 255));
        jTablePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTablePanel.setName(""); // NOI18N
        jTablePanel.setPreferredSize(new java.awt.Dimension(607, 245));

        javax.swing.GroupLayout jTablePanelLayout = new javax.swing.GroupLayout(jTablePanel);
        jTablePanel.setLayout(jTablePanelLayout);
        jTablePanelLayout.setHorizontalGroup(
            jTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jTablePanelLayout.setVerticalGroup(
            jTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("导入参数"));

        jLabel3.setText("导入方式");

        jComboBox_ImportType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "改写", "追加" }));
        jComboBox_ImportType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ImportTypeItemStateChanged(evt);
            }
        });

        jLabel4.setText("指定新建几何字段名称");

        jCheckBox_CreateSpatialIndex.setText("创建空间索引");

        jCheckBox_IgnoreError.setText("忽略错误");

        jLabel5.setText("页面大小");

        jLabel6.setText("表结构");

        jLabel7.setText("位置");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_PageSize, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_TableStructure, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_GeoColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(34, 34, 34)
                        .addComponent(jTextField_location, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_IgnoreError)
                            .addComponent(jCheckBox_CreateSpatialIndex))
                        .addGap(140, 140, 140))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_ImportType, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_ImportType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_GeoColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_CreateSpatialIndex)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_IgnoreError)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_TableStructure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_PageSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel_NewIntoDBLayout = new javax.swing.GroupLayout(jPanel_NewIntoDB);
        jPanel_NewIntoDB.setLayout(jPanel_NewIntoDBLayout);
        jPanel_NewIntoDBLayout.setHorizontalGroup(
            jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_NewIntoDBLayout.createSequentialGroup()
                .addGroup(jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                                .addComponent(jTextField_OpenFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(openfilebtn)
                                .addGap(12, 12, 12))
                            .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(96, 96, 96))))
                    .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_DBtbls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel_NewIntoDBLayout.setVerticalGroup(
            jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                .addGroup(jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel_NewIntoDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(openfilebtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_NewIntoDBLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel_DBtbls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        add(jPanel_NewIntoDB);
    }// </editor-fold>//GEN-END:initComponents

   
   
    private void openfilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfilebtnActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.setAcceptAllFileFilterUsed(false);//取消所有文件选项
        fileChooser.setDialogTitle("打开矢量文件或所在目录");
        fileChooser.setMultiSelectionEnabled(true);
          FileNameExtensionFilter tempFileFilter;
        tempFileFilter = new FileNameExtensionFilter("矢量文件(shp,mif,gml,gjb)", "SHP", "mif",
                "AZB", "BZB", "CZB", "DZB", "EZB", "FZB", "GZB", "HZB", "IZB", "JZB", "KZB", "LZB",
                "MZB", "NZB", "OZB", "PZB", "QZB", "RZB", "SZB", "TZB", "UZB", "VZB", "WZB", "XZB",
                "ZZB", "GML");
        fileChooser.addChoosableFileFilter(tempFileFilter);
        

        String lastPath = readLastAccessPath(this.getClass());

        if (!lastPath.isEmpty()) {
            fileChooser.setCurrentDirectory(new File(lastPath));
        }
        fileChooser.showOpenDialog(this);

       m_TableModel.getDataVector().clear();
   
       
        File[] files = fileChooser.getSelectedFiles();
        if (files != null) {
        
            for (File file : files) {
                openFile(file.getAbsolutePath());
            }
            if (files.length > 1) {//选择多个文件或目录
                File dir = fileChooser.getCurrentDirectory();
                jTextField_OpenFile.setText(dir.getAbsolutePath());
                saveLastAccessPath(this.getClass(),dir.getAbsolutePath());
            } else if (files.length == 1) {//单个文件或目录
                jTextField_OpenFile.setText(files[0].getAbsolutePath());
                saveLastAccessPath(this.getClass(),files[0].getAbsolutePath());
            }
            
        } 
        
        jTextField_OpenFile.updateUI();
        displayTableContent(m_TableModel);

    }//GEN-LAST:event_openfilebtnActionPerformed

    
    /**
     * 根据给出的路径打开文件内容，需要对路径参数进行判别
     *
     * @param path
     */
    @Override
    protected void openFile(String path) {
        File tmpFile = new File(path);
        if (tmpFile.isFile()
                && tmpFile.exists()) {
            //单个文件
            String name = tmpFile.getName().toLowerCase();

            boolean isOk = false;
            for (String typeString : SupportFileType) {
                if (name.endsWith(typeString.toLowerCase())) {
                    isOk = true;
                    break;
                }
            }
            if (isOk) {
                File[] files = {tmpFile};
                fillImportTable(files);
            }
        } else if (tmpFile.isDirectory()) {
                //目录
            //查找gjb坐标文件和shape文件，并将他们的信息填充表格
            String fullPath = tmpFile.getAbsolutePath();

            for (String type : SupportFileType) {
                ArrayList<File> findFiles = FileUtils.findFiles(fullPath, type);
                fillImportTable(findFiles);
            }

            ArrayList<File> gjbfiles = FileUtils.findGJBFiles(fullPath);
            fillImportTable(gjbfiles);
        }
    }
    
    private void jTextField_OpenFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_OpenFileKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
             m_TableModel.getDataVector().clear();
             openFile(jTextField_OpenFile.getText());
             displayTableContent(m_TableModel);
        }
    }//GEN-LAST:event_jTextField_OpenFileKeyPressed

    private void jComboBox_ImportTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ImportTypeItemStateChanged
        // TODO add your handling code here:
           if (evt.getStateChange()==ItemEvent.SELECTED) {
               if (jComboBox_ImportType.getSelectedIndex()==1) {
                   //追加
                   jTextField_GeoColumnName.setEnabled(false);
                   jTextField_location.setEnabled(false);
                   jComboBox_PageSize.setEnabled(false);
                   jComboBox_TableStructure.setEnabled(false);
                   jCheckBox_CreateSpatialIndex.setEnabled(false);
                  
               }else
               {
                   jTextField_GeoColumnName.setEnabled(true);
                   jTextField_location.setEnabled(true);
                   jComboBox_PageSize.setEnabled(true);
                   jComboBox_TableStructure.setEnabled(true);
                   jCheckBox_CreateSpatialIndex.setEnabled(true);
               }
        }
    }//GEN-LAST:event_jComboBox_ImportTypeItemStateChanged


    /**
     * 初始化面板上的导入参数
     */
    @Override
    protected void initImportParams()
    {
        jTextField_GeoColumnName.setText("shape");
        jTextField_location.setText("");
        jCheckBox_CreateSpatialIndex.setSelected(true);
        jCheckBox_IgnoreError.setSelected(true);
        jComboBox_PageSize.setModel(
                new DefaultComboBoxModel(new String[]{"","2K","4K","8K","16K","32K","64K"}));
        jComboBox_TableStructure.setModel(   
                new DefaultComboBoxModel(new String[]{"","BTREE","HASH","ISAM"}));
     
    }

    /**
     *获取任务
     * @return
     */
    @Override
    public ArrayList<GeomTask> getTasks() {
       
        ArrayList<GeomTask> list = new ArrayList<>();
        DataSource ds = m_ShowDataBaseTablesPanel.getDataSource();
        if (ds != null) {
            int count = m_TableModel.getRowCount();

            for (int i = 0; i < count; i++) {
          
                //没有勾选
                if (!Boolean.valueOf(String.valueOf(m_TableModel.getValueAt(i, 0)))) {
                    continue;
                }

                GeomTask task = new GeomTask();
                String filePath = String.valueOf(m_TableModel.getValueAt(i, 1));
                task.importFile = new File(filePath);
                //ID 格式是 “日期格式-序号”
                SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");//设置日期格式
                task.taskID = df.format(new Date()) + "-" + i;
                task.taskName =String.valueOf(m_TableModel.getValueAt(i, 3));//图层名称
                task.taskProgressValue = 0;
                task.taskSize =String.valueOf(m_TableModel.getValueAt(i, 2));//文件大小
                task.taskStatus = GeomTask.taskStatus_Ready;
                task.targetDataSource = ds;
                task.targetDBTableName = String.valueOf(m_TableModel.getValueAt(i, 3));//图层名称即表名
                 //改写
                task.taskIsOverWrite = (jComboBox_ImportType.getSelectedIndex() == 0);
                if (task.taskIsOverWrite) {
                    //改写
                    task.tableStructure = String.valueOf(jComboBox_TableStructure.getSelectedItem());
                    task.tablePageSize = String.valueOf(jComboBox_PageSize.getSelectedItem());
                    if (!jTextField_GeoColumnName.getText().isEmpty()) {
                        task.GeomColumnName = jTextField_GeoColumnName.getText();
                    }
                    task.tableLocation = jTextField_location.getText();
                    task.isCreateSpatialIndex = jCheckBox_CreateSpatialIndex.isSelected();
                }else
                {
                    //追加
                    //do nothing
                }      
                task.ignoreError = jCheckBox_IgnoreError.isSelected();
           
                list.add(task);
            }
        }
        return list;
    }




    
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox_CreateSpatialIndex;
    private javax.swing.JCheckBox jCheckBox_IgnoreError;
    private javax.swing.JComboBox jComboBox_ImportType;
    private javax.swing.JComboBox jComboBox_PageSize;
    private javax.swing.JComboBox jComboBox_TableStructure;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_DBtbls;
    private javax.swing.JPanel jPanel_NewIntoDB;
    private javax.swing.JPanel jTablePanel;
    private javax.swing.JTextField jTextField_GeoColumnName;
    private javax.swing.JTextField jTextField_OpenFile;
    private javax.swing.JTextField jTextField_location;
    private javax.swing.JButton openfilebtn;
    // End of variables declaration//GEN-END:variables




}