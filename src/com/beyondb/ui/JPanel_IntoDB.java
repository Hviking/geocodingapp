/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.beyondb.ui;

import com.beyondb.task.Task;
import com.beyondb.task.raster.RasterTask;
import com.beyondb.thread.ThreadAskTaskStatus;
import com.beyondb.thread.ThreadRasterImportIntoDB;
import com.beyondb.thread.ThreadTaskStatusMonitor;
import com.beyondb.ui.display.TaskTableModel;
import com.beyondb.ui.display.RowSelectableJTable;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;



/**
 *
 * @author 倪永
 */
public  abstract class JPanel_IntoDB extends javax.swing.JPanel implements I_ParseTask2TableRowData {

    protected final TaskTableModel m_TableModel;
    protected final TaskTableModel m_TableModel_Running;
    protected final TaskTableModel m_TableModel_Finished;
    
    private final JTable m_JTable;   
    private final JTable m_JTable_Running;
    private final JTable m_JTable_Finished;
    
    protected ThreadTaskStatusMonitor m_ThreadMonitor;
    protected ThreadAskTaskStatus m_SingleTaskStatusAskThread; //用来对当前单个任务状态的监控，并控制相关的Ui展示

    /**
     * Creates new form JPanel_IntoDB
     */
    public JPanel_IntoDB() {
        initComponents();
 
        m_TableModel = getTableModel(); 
        m_TableModel_Running = getTableModel(); 
        m_TableModel_Finished = getTableModel();     
        
        m_JTable = makeTaskList2Table(m_TableModel);
        m_JTable_Running = makeTaskList2Table(m_TableModel_Running);
        m_JTable_Finished = makeTaskList2Table(m_TableModel_Finished);
        
        displayTaskList(m_JTable);

        TaskControlActionListenerImpl imp= new TaskControlActionListenerImpl(m_TableModel);
        imp.setJTable(m_JTable);
        jButton_AllStart.addActionListener(imp);
        jButton__AllPause.addActionListener(imp);
        jButton_AllRemove.addActionListener(imp);
      
        addTaskStatusListener();
        addTaskStatusMonitor();
    }
    
    private void displayTaskList(JTable jTable) {
        JScrollPane jScrollp = new JScrollPane(jTable, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jPanel_Tasklist.setName("");
        jPanel_Tasklist.removeAll();
        jPanel_Tasklist.add(jScrollp);
        jPanel_Tasklist.setLayout(new GridLayout(1, 1));
        jPanel_Tasklist.setVisible(true);
        jPanel_Tasklist.updateUI();
    }
    
    private JTable makeTaskList2Table(TableModel tableModel) {
        JTable jTable = new RowSelectableJTable(tableModel);
        // jTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//    Allow only single a selection
        jTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);//设置JTable的列宽度是否随着JTable的变化而变化。
        jTable.setAutoscrolls(true);

        MouseListenerImpl impl = new MouseListenerImpl(jTable);
        jTable.addMouseListener(impl);
        setProgressRenderer(jTable);
        return jTable;
    }
    private void addTaskStatusMonitor()
    {
        m_ThreadMonitor = new ThreadTaskStatusMonitor(m_TableModel, m_TableModel_Running, m_TableModel_Finished);
        m_ThreadMonitor.start();
    }
    private void addTaskStatusListener(){
        m_SingleTaskStatusAskThread =new ThreadAskTaskStatus();
        m_SingleTaskStatusAskThread.setStartButton(jButton_AllStart);
        m_SingleTaskStatusAskThread.setPauseButton(jButton__AllPause);
        m_SingleTaskStatusAskThread.setRemoveButton(jButton_AllRemove);
        m_SingleTaskStatusAskThread.setTextArea(jTextArea_info);
        m_SingleTaskStatusAskThread.start();
    }
    
    /**
     * 获取要展示的表的TableModel
     * @return 
     */
    abstract TaskTableModel getTableModel();


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton_newTask = new javax.swing.JButton();
        jButton_allTask = new javax.swing.JButton();
        jButton_runningTask = new javax.swing.JButton();
        jButton_finishedTask = new javax.swing.JButton();
        jButton_TaskLog = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_info = new javax.swing.JTextArea();
        jPanel_Task = new javax.swing.JPanel();
        jPanel_Tasklist = new javax.swing.JPanel();
        jToolBar_taskMng = new javax.swing.JToolBar();
        jButton_AllStart = new javax.swing.JButton();
        jButton__AllPause = new javax.swing.JButton();
        jButton_AllRemove = new javax.swing.JButton();

        setToolTipText("");
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(820, 369));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jSplitPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setDividerSize(8);
        jSplitPane1.setOneTouchExpandable(true);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(846, 500));
        jSplitPane1.setRequestFocusEnabled(false);

        jPanel3.setPreferredSize(new java.awt.Dimension(50, 100));
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0};
        jPanel3Layout.rowHeights = new int[] {0, 31, 0, 31, 0, 31, 0, 31, 0, 31, 0, 31, 0};
        jPanel3.setLayout(jPanel3Layout);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 1);
        jPanel3.add(jLabel2, gridBagConstraints);

        jButton_newTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/xinjianrenwu.png"))); // NOI18N
        jButton_newTask.setContentAreaFilled(false);
        jButton_newTask.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_newTask.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/xinjianrenwudianji.png"))); // NOI18N
        jButton_newTask.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_newTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_newTaskActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 4;
        jPanel3.add(jButton_newTask, gridBagConstraints);

        jButton_allTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/quanburenwu.png"))); // NOI18N
        jButton_allTask.setContentAreaFilled(false);
        jButton_allTask.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_allTask.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/quanburenwudianji.png"))); // NOI18N
        jButton_allTask.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_allTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_allTaskActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipady = 4;
        jPanel3.add(jButton_allTask, gridBagConstraints);

        jButton_runningTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/zhengzaijinxing.png"))); // NOI18N
        jButton_runningTask.setContentAreaFilled(false);
        jButton_runningTask.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_runningTask.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/zhengzaijinxingdianji.png"))); // NOI18N
        jButton_runningTask.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_runningTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_runningTaskActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipady = 4;
        jPanel3.add(jButton_runningTask, gridBagConstraints);

        jButton_finishedTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/yiwancheng.png"))); // NOI18N
        jButton_finishedTask.setContentAreaFilled(false);
        jButton_finishedTask.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_finishedTask.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/yiwanchengdianji.png"))); // NOI18N
        jButton_finishedTask.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_finishedTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_finishedTaskActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipady = 4;
        jPanel3.add(jButton_finishedTask, gridBagConstraints);

        jButton_TaskLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/renwurizhi.png"))); // NOI18N
        jButton_TaskLog.setContentAreaFilled(false);
        jButton_TaskLog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_TaskLog.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/renwurizhidianji.png"))); // NOI18N
        jButton_TaskLog.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_TaskLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TaskLogActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.ipady = 4;
        jPanel3.add(jButton_TaskLog, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel3);

        jSplitPane2.setDividerLocation(650);
        jSplitPane2.setDividerSize(8);
        jSplitPane2.setOneTouchExpandable(true);
        jSplitPane2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jSplitPane2ComponentResized(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel3.setText("详细信息");

        jTextArea_info.setColumns(10);
        jTextArea_info.setRows(5);
        jTextArea_info.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea_info);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel4);

        jPanel_Tasklist.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_TasklistLayout = new javax.swing.GroupLayout(jPanel_Tasklist);
        jPanel_Tasklist.setLayout(jPanel_TasklistLayout);
        jPanel_TasklistLayout.setHorizontalGroup(
            jPanel_TasklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel_TasklistLayout.setVerticalGroup(
            jPanel_TasklistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
        );

        jToolBar_taskMng.setLayout(new FlowLayout(FlowLayout.RIGHT));
        jToolBar_taskMng.setFloatable(false);
        jToolBar_taskMng.setRollover(true);

        jButton_AllStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/start0.8.png"))); // NOI18N
        jButton_AllStart.setActionCommand("allstart");
        jButton_AllStart.setContentAreaFilled(false);
        jButton_AllStart.setFocusable(false);
        jButton_AllStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_AllStart.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/start0.8dianji.png"))); // NOI18N
        jButton_AllStart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar_taskMng.add(jButton_AllStart);

        jButton__AllPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/stop0.8.png"))); // NOI18N
        jButton__AllPause.setActionCommand("allpause");
        jButton__AllPause.setContentAreaFilled(false);
        jButton__AllPause.setFocusable(false);
        jButton__AllPause.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton__AllPause.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/stop0.8dianji.png"))); // NOI18N
        jButton__AllPause.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar_taskMng.add(jButton__AllPause);

        jButton_AllRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/delete0.8.png"))); // NOI18N
        jButton_AllRemove.setActionCommand("allremove");
        jButton_AllRemove.setContentAreaFilled(false);
        jButton_AllRemove.setFocusable(false);
        jButton_AllRemove.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_AllRemove.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/beyondb/ui/images/delete0.8dianji.png"))); // NOI18N
        jButton_AllRemove.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar_taskMng.add(jButton_AllRemove);

        javax.swing.GroupLayout jPanel_TaskLayout = new javax.swing.GroupLayout(jPanel_Task);
        jPanel_Task.setLayout(jPanel_TaskLayout);
        jPanel_TaskLayout.setHorizontalGroup(
            jPanel_TaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_TaskLayout.createSequentialGroup()
                .addGroup(jPanel_TaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar_taskMng, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Tasklist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );
        jPanel_TaskLayout.setVerticalGroup(
            jPanel_TaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_TaskLayout.createSequentialGroup()
                .addComponent(jToolBar_taskMng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel_Tasklist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane2.setLeftComponent(jPanel_Task);

        jSplitPane1.setRightComponent(jSplitPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_newTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_newTaskActionPerformed
        // TODO add your handling code here:
       newTask();
    }//GEN-LAST:event_jButton_newTaskActionPerformed

    abstract  void newTask();
    
    private void jButton_runningTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_runningTaskActionPerformed
        // TODO add your handling code here:
        if (!jPanel_Tasklist.getName().equals("running")) {
            displayTaskList(m_JTable_Running);
            jPanel_Tasklist.setName("running");
            jToolBar_taskMng.setEnabled(false);
            
             jButton_allTask.setSelected(false);
            jButton_runningTask.setSelected(true);
            jButton_finishedTask.setSelected(false);
        }     
    }//GEN-LAST:event_jButton_runningTaskActionPerformed

   
    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
        if (evt.getNewValue() == null
                &&evt.getOldValue().getClass().getName().equals("javax.swing.JTabbedPane")) {
            
            m_TableModel.close();
              //关闭 任务状态轮询线程
            m_SingleTaskStatusAskThread.setStop(true);
            m_ThreadMonitor.setStop(true);
        }
    }//GEN-LAST:event_formPropertyChange

  
    private void jButton_allTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_allTaskActionPerformed
        // TODO add your handling code here:
 
        if (!jPanel_Tasklist.getName().equals("all")) {
            displayTaskList(m_JTable);
            jPanel_Tasklist.setName("all");
            jToolBar_taskMng.setEnabled(true);
            jButton_allTask.setSelected(true);
            jButton_runningTask.setSelected(false);
            jButton_finishedTask.setSelected(false);
            
        }
    }//GEN-LAST:event_jButton_allTaskActionPerformed

    private void jButton_finishedTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_finishedTaskActionPerformed
        // TODO add your handling code here:
        if (!jPanel_Tasklist.getName().equals("finished")) {
            jPanel_Tasklist.setName("finished");
            displayTaskList(m_JTable_Finished);
            jToolBar_taskMng.setEnabled(false);
            
            jButton_allTask.setSelected(false);
            jButton_runningTask.setSelected(false);
            jButton_finishedTask.setSelected(true);
        }
    }//GEN-LAST:event_jButton_finishedTaskActionPerformed

    private void jButton_TaskLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TaskLogActionPerformed
        // TODO add your handling code here:
        openLog();
    }//GEN-LAST:event_jButton_TaskLogActionPerformed

    abstract   void openLog();
    
    private void jSplitPane2ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSplitPane2ComponentResized
        // TODO add your handling code here:
         jSplitPane2.setDividerLocation(0.8);
    }//GEN-LAST:event_jSplitPane2ComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AllRemove;
    private javax.swing.JButton jButton_AllStart;
    private javax.swing.JButton jButton_TaskLog;
    private javax.swing.JButton jButton__AllPause;
    private javax.swing.JButton jButton_allTask;
    private javax.swing.JButton jButton_finishedTask;
    private javax.swing.JButton jButton_newTask;
    private javax.swing.JButton jButton_runningTask;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_Task;
    private javax.swing.JPanel jPanel_Tasklist;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea jTextArea_info;
    private javax.swing.JToolBar jToolBar_taskMng;
    // End of variables declaration//GEN-END:variables
 
    private void setProgressRenderer(JTable jTable) {
        //将进度栏在表格中展示出来
        TableCellRenderer render = new MyProgressBarRenderer();
        TableColumn tc = jTable.getColumn("进度");
        tc.setCellRenderer(render);
    }
    
    private void setStatusRenderer(JTable jTable) {
        //将进度栏在表格中展示出来
        TableCellRenderer render = new MyTextRenderer();
        TableColumn tc = jTable.getColumn("状态");
        tc.setCellRenderer(render);
    }
          private class MyProgressBarRenderer extends JProgressBar implements TableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {
        Integer v = (Integer) value;//这一列必须都是integer类型(0-100)
        setStringPainted(true);
        setValue(v);
        return this;
    }

}  
    private class MyTextRenderer extends DefaultTableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {
        Component c =super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        JLabel label = (JLabel) c;
        // 在这个label上设置
        label.setText("<html><red>"+value+"</red></html>");
         
        return label;
   
    }

}


    private  class  TaskControlActionListenerImpl  implements  ActionListener{
        TaskTableModel m_TableModel;
        private JTable m_JTable;

        public TaskControlActionListenerImpl(TaskTableModel model) {
            m_TableModel = model;
        }
        public void setJTable(JTable jTable)
        {
            m_JTable = jTable;
        }
        @Override
        public void actionPerformed(ActionEvent e) {
    
            if (m_TableModel == null) {
                return;
            }
            int[] selectedRows =m_JTable.getSelectedRows();
            switch (e.getActionCommand()) {
                case "allstart":
                      for (int i = 0; i<selectedRows.length ; i++) {
                        m_TableModel.startTask(selectedRows[i]);
                    }
                    break;
                case "allpause":
                    for (int i = selectedRows.length - 1; i >= 0; i--) {
                        m_TableModel.suspendTask(selectedRows[i]);
                    }
                    break;
                case "allremove":
                    for (int i = selectedRows.length - 1; i >= 0; i--) {
                        m_TableModel.removeTask(selectedRows[i]);
                    }
                    m_SingleTaskStatusAskThread.setCurrentTask(null);
                    break;
            }
           
        }
        
    }
  
    
       
    private  class MouseListenerImpl  extends  MouseAdapter{

        JTable mTable;
        Task m_current_single_Task;
        public MouseListenerImpl(JTable jTable) {
          mTable =jTable;
        }
        @Override
        public void mouseClicked(MouseEvent e) {
            int[] selectedRows = mTable.getSelectedRows();
            TaskTableModel model = (TaskTableModel) mTable.getModel();
            
            if (selectedRows.length ==1) {
                m_current_single_Task = model.getTask(selectedRows[0]);
                m_SingleTaskStatusAskThread.setCurrentTask(m_current_single_Task);
                m_SingleTaskStatusAskThread.setBtnUIenable(true);
                m_SingleTaskStatusAskThread.updateBtnUI();
                
                
                    if (e.getButton() == MouseEvent.BUTTON3) {
                    if (m_current_single_Task instanceof RasterTask) {
                        JPopupMenu pop = new JPopupMenu("pop");
                        JMenuItem item1 = new JMenuItem("导出命令");

                        item1.addMouseListener(new MouseAdapter() {
                            @Override
                            public void mouseReleased(MouseEvent e) {
                                //导出命令
                                JScrollPane scrollPane = new JScrollPane();

                                JTextArea area = new JTextArea();
                                area.setSize(800, 600);
                                area.setColumns(10);
                                area.setRows(10);
                                scrollPane.setViewportView(area);
                                try {

                                    RasterTask rasterTask = (RasterTask) m_current_single_Task;
                                    rasterTask.cmd = ThreadRasterImportIntoDB.createCommand(rasterTask);
                                    area.setText(rasterTask.cmd);

                                } catch (Exception ex) {
                                    area.setText("只有执行该任务才能看到导出命令");
                                }

                                JOptionPane.showConfirmDialog(e.getComponent(), scrollPane,
                                        "导出命令", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                            }
                        });

                        pop.add(item1);
                        //e.getComponent()表示与右键菜单关联的组件，这里指button2  
                        pop.show(e.getComponent(), e.getX(), e.getY());
                    }
                }
            }
             if (selectedRows.length > 1) {
                  m_current_single_Task=null;//此时有多个任务
                  m_SingleTaskStatusAskThread.setCurrentTask(null);
                  boolean flag =false;
                  for(int i =0;i<selectedRows.length;i++)
                  {
                      Task task = model.getTask(selectedRows[i]);
                      if (task.taskStatus!=Task.taskStatus_Finished
                              &&task.taskStatus!=Task.taskStatus_Queue_up) {
                          flag=true;
                          break;
                      }
                  }
                  m_SingleTaskStatusAskThread.setBtnUIenable(flag);
                  m_SingleTaskStatusAskThread.updateBtnUI();
             }
        }
        
    
    }
    
    
}

