/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.beyondb.ui;

import com.beyondb.datasource.BydOperator;
import com.beyondb.datasource.DataSource;
import com.beyondb.datasource.DataSourceUtils;
import com.beyondb.multimedia.MediaFormat;
import com.beyondb.multimedia.MediaMode;
import com.beyondb.multimedia.StoreMode;
import com.beyondb.utils.ICheckAvailable;
import com.beyondb.utils.initSystemParams;
import java.awt.event.ItemEvent;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author beyondb
 */
public class SetMediaModePanel extends javax.swing.JPanel implements ICheckAvailable{

    private StoreMode m_StoreMode;
    private String m_TableAName="";
    private BydOperator m_bydOperator;

    /**
     * Creates new form SetRasterModePanel
     */
    public SetMediaModePanel() {
        initComponents();

        m_StoreMode = new StoreMode(); 

        for (MediaMode mode : MediaMode.values()) {
            jComboBox_Mode.addItem(mode);
        }
        
        String[] SupportFileType = (String[]) initSystemParams.getInstance()
                .getSystemParam(initSystemParams.PARAM.PARAM_MULTIMEDIA_FILE_TYPE);
        for (String filetype : SupportFileType) {
            jComboBox_fileformat.addItem(filetype);
        }
       
    }
    
    public void setMediaMode(MediaMode mode) {
     
        if (mode !=null) {
            m_StoreMode.mediamode= mode;
            jComboBox_Mode.setSelectedItem(mode.name());
        }
    }


 
     
    public void setTableAName(String tableAName) {
        m_TableAName = tableAName;
        this.jTextField_MAT.setText(tableAName);
 
    }
    
    /**
     * 自动填充B表名称
     * @return 
     */
    public String auotFileTableBName()
    {
        if (m_TableAName.isEmpty()) {
            return "";
        }
        String mediaColumnName = m_bydOperator.getMediaColumnName(m_TableAName);
        if (mediaColumnName.isEmpty()) {
            return "";
        }
        //检查是否有B表
        String mbt = m_bydOperator.readMediaDataLocation(m_TableAName, mediaColumnName);
        if (!mbt.isEmpty()) {
            setTableBName(mbt);
        }
        return mbt;
    }
   
    
    public void setTableBName(String tableBName) {
        m_StoreMode.tableBName = tableBName;
        this.jTextField_mbt.setText(tableBName);
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox_Mode = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField_MAT = new javax.swing.JTextField();
        jLabel_rbt = new javax.swing.JLabel();
        jTextField_mbt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox_Block = new javax.swing.JCheckBox();
        jLabel_block_unit = new javax.swing.JLabel();
        jSpinner_block_unit = new javax.swing.JSpinner();
        jSpinner_Block_size = new javax.swing.JSpinner();
        jLabel_blockSize = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSpinner_XMLSchemaID = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSpinner_bitrate = new javax.swing.JSpinner();
        jCheckBox_LinkExist = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_fileformat = new javax.swing.JComboBox();
        jSpinner_framerate = new javax.swing.JSpinner();
        jSpinner_frameresolution = new javax.swing.JSpinner();
        jLabel_fileformat = new javax.swing.JLabel();

        jLabel1.setText("存储模式");

        jComboBox_Mode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ModeItemStateChanged(evt);
            }
        });

        jLabel2.setText("属性表表名");

        jLabel_rbt.setText("分块表/路径");

        jTextField_mbt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_mbtFocusGained(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("分块大小"));

        jCheckBox_Block.setSelected(true);
        jCheckBox_Block.setText("是否分块");
        jCheckBox_Block.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_BlockActionPerformed(evt);
            }
        });

        jLabel_block_unit.setText("单位");

        jSpinner_block_unit.setModel(new javax.swing.SpinnerListModel(new String[] {"K", "M", "G"}));

        jSpinner_Block_size.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel_blockSize.setText("数值");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_Block, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_blockSize)
                            .addComponent(jLabel_block_unit))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner_block_unit, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(jSpinner_Block_size))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jCheckBox_Block, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_Block_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_blockSize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_block_unit)
                    .addComponent(jSpinner_block_unit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("XML方案号");

        jSpinner_XMLSchemaID.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel21.setText("比特率");

        jLabel22.setText("帧速率");

        jSpinner_bitrate.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(-1), Integer.valueOf(-1), null, Integer.valueOf(1)));

        jCheckBox_LinkExist.setText("外部链接");
        jCheckBox_LinkExist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_LinkExistActionPerformed(evt);
            }
        });

        jLabel3.setText("分辨率");

        jSpinner_framerate.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(-1), Integer.valueOf(-1), null, Integer.valueOf(1)));

        jSpinner_frameresolution.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(-1), Integer.valueOf(-1), null, Integer.valueOf(1)));

        jLabel_fileformat.setText("文件格式");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_rbt)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_MAT, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_Mode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextField_mbt)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_LinkExist)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18)
                                    .addComponent(jSpinner_XMLSchemaID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel22)
                                .addComponent(jLabel21)
                                .addComponent(jLabel3))
                            .addComponent(jLabel_fileformat, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSpinner_frameresolution, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                .addComponent(jSpinner_bitrate))
                            .addComponent(jComboBox_fileformat, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_framerate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_MAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox_Mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_rbt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_mbt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinner_bitrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_framerate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jSpinner_frameresolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner_XMLSchemaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel_fileformat)
                            .addComponent(jComboBox_fileformat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_LinkExist)
                        .addGap(0, 21, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox_LinkExistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_LinkExistActionPerformed
        // TODO add your handling code here:
        File f=new File(jTextField_mbt.getText());
        if (jCheckBox_LinkExist.isSelected()) {
           //如果外部数据源不存在，则提示错误信息
            if (!f.exists()) {
               JOptionPane.showMessageDialog(this, "指向的外部数据源不存在","提示",JOptionPane.ERROR_MESSAGE);
           
            }
        } else {
            //不关联数据源，在后续再关联
            //如果外部数据源已经存在，则提示错误信息
            if (f.exists()) {
               JOptionPane.showMessageDialog(this, "指向的外部数据源已存在！请确保无数据","提示",JOptionPane.ERROR_MESSAGE);
           
            }
        }
    }//GEN-LAST:event_jCheckBox_LinkExistActionPerformed

    void setDataSource(DataSource dataSource) {
         m_bydOperator = new BydOperator(new DataSourceUtils(dataSource));
    }
    
    public void setStoreMode(StoreMode mode) {
       
        m_StoreMode = mode;
        jTextField_mbt.setText(mode.tableBName);
        
        if (!mode.blocksize.isEmpty()&&mode.blocksize.length()>=2) {
            String sizeValue = mode.blocksize.substring(0, mode.blocksize.length() - 2);
            String sizeUnit = String.valueOf(mode.blocksize.charAt(mode.blocksize.length() - 1));
            
            jSpinner_Block_size.setValue(Integer.parseInt(sizeValue));
            jSpinner_block_unit.setValue(sizeUnit);            
        }
        

        jCheckBox_Block.setSelected(mode.blocking);  
        jComboBox_Mode.setSelectedItem(mode.mediamode.name());
        jComboBox_fileformat.setSelectedItem(mode.fileformat.name());
        
        jCheckBox_LinkExist.setSelected(mode.Linkexist);
        jSpinner_XMLSchemaID.setValue(mode.metaschemaId);
        jSpinner_bitrate.setValue(mode.bitRate);
        jSpinner_framerate.setValue(mode.frameRate);
        jSpinner_frameresolution.setValue(mode.frameResolution);
        
    }
    public  StoreMode getStoreMode() {
        
        m_TableAName = jTextField_MAT.getText();
        m_StoreMode.tableBName = jTextField_mbt.getText();
        
        m_StoreMode.blocking = jCheckBox_Block.isSelected();

        m_StoreMode.blocksize = jSpinner_Block_size.getValue().toString()+jSpinner_block_unit.getValue().toString();

        m_StoreMode.fileformat = MediaFormat.valueOf(jComboBox_fileformat.getSelectedItem().toString());
        m_StoreMode.mediamode = MediaMode.valueOf(jComboBox_Mode.getSelectedItem().toString());

        m_StoreMode.Linkexist = jCheckBox_LinkExist.isSelected();
        
        m_StoreMode.metaschemaId = Integer.parseInt(jSpinner_XMLSchemaID.getValue().toString());

        m_StoreMode.bitRate= Integer.parseInt(jSpinner_bitrate.getValue().toString());
        m_StoreMode.frameRate= Integer.parseInt(jSpinner_framerate.getValue().toString());
        m_StoreMode.frameResolution= Integer.parseInt(jSpinner_frameresolution.getValue().toString());
        
        return m_StoreMode;
    }
    
    public  String  getTableAName() {
        m_TableAName = jTextField_MAT.getText();
       return  m_TableAName;
    }



     
    private void jCheckBox_BlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_BlockActionPerformed
        // TODO add your handling code here:
        if (jCheckBox_Block.isSelected()) {
            jLabel_blockSize.setEnabled(true);
            jLabel_block_unit.setEnabled(true);
            jSpinner_block_unit.setEnabled(true);
            jSpinner_Block_size.setEnabled(true);
        } else {
            jSpinner_block_unit.setEnabled(false);
            jSpinner_Block_size.setEnabled(false);
            jLabel_blockSize.setEnabled(false);
            jLabel_block_unit.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox_BlockActionPerformed

    private void  tips4TableName()
    {
        if (jTextField_MAT.getText().isEmpty()) {
            //提示不能为空
            JOptionPane.showMessageDialog(this, "属性表名称不能为空","提示",JOptionPane.WARNING_MESSAGE);
            jTextField_mbt.setText(m_StoreMode.tableBName);
        }
        if (jTextField_mbt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "分块表/路径不能为空","提示",JOptionPane.WARNING_MESSAGE);
            jTextField_mbt.setText(m_StoreMode.tableBName);
        }
    }
    private void jTextField_mbtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_mbtFocusGained
        // TODO add your handling code here:
             m_TableAName = jTextField_MAT.getText();
            auotFileTableBName();
    }//GEN-LAST:event_jTextField_mbtFocusGained

    private void jComboBox_ModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ModeItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jComboBox_Mode.getSelectedItem().equals(MediaMode.inline)) {
                jLabel_rbt.setText("分块表名称");
                jCheckBox_LinkExist.setEnabled(false);
            } else if (jComboBox_Mode.getSelectedItem().equals(MediaMode.gateway)) {
                //使用当前路径作为外部数据源
                jLabel_rbt.setText("外部数据所在路径");
                jCheckBox_LinkExist.setEnabled(true);
            }
        }
         
    }//GEN-LAST:event_jComboBox_ModeItemStateChanged

  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox_Block;
    private javax.swing.JCheckBox jCheckBox_LinkExist;
    private javax.swing.JComboBox jComboBox_Mode;
    private javax.swing.JComboBox jComboBox_fileformat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_blockSize;
    private javax.swing.JLabel jLabel_block_unit;
    private javax.swing.JLabel jLabel_fileformat;
    private javax.swing.JLabel jLabel_rbt;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner_Block_size;
    private javax.swing.JSpinner jSpinner_XMLSchemaID;
    private javax.swing.JSpinner jSpinner_bitrate;
    private javax.swing.JSpinner jSpinner_block_unit;
    private javax.swing.JSpinner jSpinner_framerate;
    private javax.swing.JSpinner jSpinner_frameresolution;
    private javax.swing.JTextField jTextField_MAT;
    private javax.swing.JTextField jTextField_mbt;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean isAvailabled() {
     //检查Storemode的完整性
        getStoreMode();
        tips4TableName();
        if (m_StoreMode.tableBName.isEmpty()) {
            return false;
        }
        if (m_TableAName.isEmpty()) {
            return false;
        }
        return true;
    }

    


}

